<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0          http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd">
	<camelContext id="camelContext-28132684-f68b-4187-be20-8c99e774585b"
		xmlns="http://camel.apache.org/schema/blueprint">
		
		<route id="AMQ-to-Artemis">
			<from id="from2" uri="activemq:queue:test.AMQ" />
			<log id="log3" message="GOT MESSAGE" />
			<to id="to1" uri="jms:queue:test.EAP7?username=jms&amp;password=jms@1234" />
		</route>
	</camelContext>


	<!-- ********************* AMQ configuration ************************** -->


	<bean id="jmsConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
		<property name="brokerURL" value="tcp://localhost:61616" />
		<property name="userName" value="admin" />
		<property name="password" value="admin" />
	</bean>

	<bean id="pooledConnectionFactory" class="org.apache.activemq.pool.PooledConnectionFactory"
		init-method="start" destroy-method="stop">
		<property name="maxConnections" value="8" />
		<property name="connectionFactory" ref="jmsConnectionFactory" />
	</bean>

	<bean id="jmsConfig" class="org.apache.camel.component.jms.JmsConfiguration">
		<property name="connectionFactory" ref="pooledConnectionFactory" />
		<property name="concurrentConsumers" value="10" />
	</bean>

	<bean id="activemq" class="org.apache.activemq.camel.component.ActiveMQComponent">
		<property name="configuration" ref="jmsConfig" />

		<!-- if we are using transacted then enable CACHE_CONSUMER (if not using 
			XA) to run faster see more details at: http://camel.apache.org/jms <property 
			name="transacted" value="true"/> <property name="cacheLevelName" value="CACHE_CONSUMER" 
			/> -->
	</bean>


	<!-- ********************* Artemis configuration ************************** -->


	<bean class="org.springframework.jndi.JndiTemplate" id="jndiTemplate">
		<property name="environment">
			<props>
				<prop key="java.naming.factory.initial">org.jboss.naming.remote.client.InitialContextFactory</prop>
				<prop key="java.naming.provider.url">http-remoting://localhost:8080</prop>
			</props>
		</property>
	</bean>
	
	<bean factory-method="createJndiObjectFactory" factory-ref="factory"
		id="jmsInConnectionFactoryJndiLookupFactory" init-method="afterPropertiesSet">
		<property name="jndiTemplate" ref="jndiTemplate" />
		<property name="jndiName" value="jms/RemoteConnectionFactory" />
	</bean>
	
	<bean factory-method="getObject" factory-ref="jmsInConnectionFactoryJndiLookupFactory" id="JmsConnectionFactory" />
	
	<bean class="org.apache.camel.component.jms.JmsComponent" id="jms">
		<property name="connectionFactory" ref="JmsConnectionFactory" />
	</bean>
	
	<bean class="com.test.JndiFactoryFactory" destroy-method="destroyJndiObjectFactory"	id="factory" />
</blueprint>
